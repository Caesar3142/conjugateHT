/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;

vertices
(
    (-26 -4000 0) //0
    (-17 -4000 0) //1
    (-15 -4000 0) //2
    (0 -4000 0) //3
    (0 -3900 0) //4
    (-15 -3900 0) //5
    (-17 -3900 0) //6
    (-26 -3900 0) //7
    (-26 0 0)//8
    (-17 0 0) //9
    (-15 0 0) //10
    (0 0 0) //11

    (-26 -4000 1) //0
    (-17 -4000 1) //1
    (-15 -4000 1) //2
    (0 -4000 1) //3
    (0 -3900 1) //4
    (-15 -3900 1) //5
    (-17 -3900 1) //6
    (-26 -3900 1) //7
    (-26 0 1)//8
    (-17 0 1) //9
    (-15 0 1) //10
    (0 0 1) //11
);

blocks
(
    hex (0 1 6 7 12 13 18 19)(10 40 1) simpleGrading (1 1 1)
    hex (1 2 5 6 13 14 17 18)(4 40 1) simpleGrading (1 1 1)
    hex (2 3 4 5 14 15 16 17)(10 40 1) simpleGrading (1 1 1)
    hex (7 6 9 8 19 18 21 20)(10 1500 1) simpleGrading (1 1 1)
    hex (6 5 10 9 18 17 22 21)(4 1500 1) simpleGrading (1 1 1)
    hex (5 4 11 10 17 16 23 22)(10 1500 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    grounds
    {
        type wall;
        faces
        (
            (0 7 19 12)
            (7 8 20 19)
            (3 4 16 15)
            (4 11 23 16)
        );
    }
    
    bottom
    {
        type wall;
        faces
        (
            (0 1 13 12)
            (1 2 14 13)
            (2 3 15 14)
        );
    }

    front
    {
        type empty;
        faces
        (
            (12 13 18 19)
            (19 18 21 20)
            (13 14 17 18)
            (18 17 22 21)
            (14 15 16 17)
            (17 16 23 22)
        );
    }

    back
    {
        type empty;
        faces
        (
            (0 1 6 7)
            (1 2 6 5)
            (2 3 4 5)
            (7 6 9 8)
            (6 5 10 9)
            (5 4 11 10)
        );
    }

    inlet
    {
        type patch;
        faces
        (
            (8 9 21 20)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (10 11 23 22)
        );
    }
    
);

mergePatchPairs
(
);


// ************************************************************************* //
